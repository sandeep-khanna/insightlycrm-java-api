/*
 * Insightly API v2.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.insightly.model;

import java.io.Serializable;
import java.util.Objects;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;



/**
 * LeadSource
 */
@JacksonXmlRootElement(localName = "LeadSource")
@XmlRootElement(name = "LeadSource")
@XmlAccessorType(XmlAccessType.FIELD)
public class LeadSource implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("LEAD_SOURCE_ID")
  @JacksonXmlProperty(localName = "LEAD_SOURCE_ID")
  @XmlElement(name = "LEAD_SOURCE_ID")
  private Long LEAD_SOURCE_ID = null;

  @JsonProperty("LEAD_SOURCE")
  @JacksonXmlProperty(localName = "LEAD_SOURCE")
  @XmlElement(name = "LEAD_SOURCE")
  private String LEAD_SOURCE = null;

  @JsonProperty("DEFAULT_VALUE")
  @JacksonXmlProperty(localName = "DEFAULT_VALUE")
  @XmlElement(name = "DEFAULT_VALUE")
  private Boolean DEFAULT_VALUE = null;

  @JsonProperty("FIELD_ORDER")
  @JacksonXmlProperty(localName = "FIELD_ORDER")
  @XmlElement(name = "FIELD_ORDER")
  private Integer FIELD_ORDER = null;

  public LeadSource LEAD_SOURCE_ID(Long LEAD_SOURCE_ID) {
    this.LEAD_SOURCE_ID = LEAD_SOURCE_ID;
    return this;
  }

   /**
   * Get LEAD_SOURCE_ID
   * @return LEAD_SOURCE_ID
  **/
  
  public Long getLEADSOURCEID() {
    return LEAD_SOURCE_ID;
  }

  public void setLEADSOURCEID(Long LEAD_SOURCE_ID) {
    this.LEAD_SOURCE_ID = LEAD_SOURCE_ID;
  }

  public LeadSource LEAD_SOURCE(String LEAD_SOURCE) {
    this.LEAD_SOURCE = LEAD_SOURCE;
    return this;
  }

   /**
   * Get LEAD_SOURCE
   * @return LEAD_SOURCE
  **/
  
  public String getLEADSOURCE() {
    return LEAD_SOURCE;
  }

  public void setLEADSOURCE(String LEAD_SOURCE) {
    this.LEAD_SOURCE = LEAD_SOURCE;
  }

  public LeadSource DEFAULT_VALUE(Boolean DEFAULT_VALUE) {
    this.DEFAULT_VALUE = DEFAULT_VALUE;
    return this;
  }

   /**
   * Get DEFAULT_VALUE
   * @return DEFAULT_VALUE
  **/
  
  public Boolean getDEFAULTVALUE() {
    return DEFAULT_VALUE;
  }

  public void setDEFAULTVALUE(Boolean DEFAULT_VALUE) {
    this.DEFAULT_VALUE = DEFAULT_VALUE;
  }

  public LeadSource FIELD_ORDER(Integer FIELD_ORDER) {
    this.FIELD_ORDER = FIELD_ORDER;
    return this;
  }

   /**
   * Get FIELD_ORDER
   * @return FIELD_ORDER
  **/
  
  public Integer getFIELDORDER() {
    return FIELD_ORDER;
  }

  public void setFIELDORDER(Integer FIELD_ORDER) {
    this.FIELD_ORDER = FIELD_ORDER;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LeadSource leadSource = (LeadSource) o;
    return Objects.equals(this.LEAD_SOURCE_ID, leadSource.LEAD_SOURCE_ID) &&
        Objects.equals(this.LEAD_SOURCE, leadSource.LEAD_SOURCE) &&
        Objects.equals(this.DEFAULT_VALUE, leadSource.DEFAULT_VALUE) &&
        Objects.equals(this.FIELD_ORDER, leadSource.FIELD_ORDER);
  }

  @Override
  public int hashCode() {
    return Objects.hash(LEAD_SOURCE_ID, LEAD_SOURCE, DEFAULT_VALUE, FIELD_ORDER);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LeadSource {\n");
    
    sb.append("    LEAD_SOURCE_ID: ").append(toIndentedString(LEAD_SOURCE_ID)).append("\n");
    sb.append("    LEAD_SOURCE: ").append(toIndentedString(LEAD_SOURCE)).append("\n");
    sb.append("    DEFAULT_VALUE: ").append(toIndentedString(DEFAULT_VALUE)).append("\n");
    sb.append("    FIELD_ORDER: ").append(toIndentedString(FIELD_ORDER)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

