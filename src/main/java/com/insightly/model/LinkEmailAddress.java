/*
 * Insightly API v2.2
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.insightly.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;


import java.io.Serializable;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement;
import com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty;
import javax.xml.bind.annotation.*;

/**
 * LinkEmailAddress
 */
@JacksonXmlRootElement(localName = "LinkEmailAddress")
@XmlRootElement(name = "LinkEmailAddress")
@XmlAccessorType(XmlAccessType.FIELD)
public class LinkEmailAddress implements Serializable {
  private static final long serialVersionUID = 1L;

  @JsonProperty("EMAIL")
  @JacksonXmlProperty(localName = "EMAIL")
  @XmlElement(name = "EMAIL")
  private String EMAIL = null;

  public LinkEmailAddress EMAIL(String EMAIL) {
    this.EMAIL = EMAIL;
    return this;
  }

   /**
   * Get EMAIL
   * @return EMAIL
  **/
  
  public String getEMAIL() {
    return EMAIL;
  }

  public void setEMAIL(String EMAIL) {
    this.EMAIL = EMAIL;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LinkEmailAddress linkEmailAddress = (LinkEmailAddress) o;
    return Objects.equals(this.EMAIL, linkEmailAddress.EMAIL);
  }

  @Override
  public int hashCode() {
    return Objects.hash(EMAIL);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LinkEmailAddress {\n");
    
    sb.append("    EMAIL: ").append(toIndentedString(EMAIL)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

